"""add rss

Revision ID: 93341b81b4d8
Revises:
Create Date: 2025-05-15 19:45:48.844716

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = "93341b81b4d8"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "follow_rss_path",
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("rss_path", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_follow_rss_path")),
    )
    op.create_index(
        op.f("ix_follow_rss_path_id"), "follow_rss_path", ["id"], unique=True
    )
    op.create_table(
        "rss",
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("link", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("guid", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("pub_date", sa.DateTime(), nullable=True),
        sa.Column("author", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("rss_path", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_rss")),
        sa.UniqueConstraint("title", name=op.f("uq_rss_title")),
    )
    op.create_index(op.f("ix_rss_id"), "rss", ["id"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_rss_id"), table_name="rss")
    op.drop_table("rss")
    op.drop_index(op.f("ix_follow_rss_path_id"), table_name="follow_rss_path")
    op.drop_table("follow_rss_path")
    # ### end Alembic commands ###
